C Piscine
C 00

Chapter III
Exercice 00 : ft_putchar
Turn-in directory : ex00/
Files to turn in : ft_putchar.c
Allowed functions : write

Write a function that displays the character passed as a parameter.
It will be prototyped as follows :
void ft_putchar(char c);

To display the character, you must use the texttt write function as follows.
write(1, &c, 1);

5

Chapter IV
Exercise 01 : ft_print_alphabet
Turn-in directory : ex01/
Files to turn in : ft_print_alphabet.c
Allowed functions : write

Create a function that displays the alphabet in lowercase, on a single line, by
ascending order, starting from the letter ’a’.
Here’s how it should be prototyped :
void ft_print_alphabet(void);

6

Chapter V
Exercise 02 :
ft_print_reverse_alphabet
Turn-in directory : ex02/
Files to turn in : ft_print_reverse_alphabet.c
Allowed functions : write

Create a function that displays the alphabet in lowercase, on a single line, by
descending order, starting from the letter ’z’.
Here’s how it should be prototyped :
void ft_print_reverse_alphabet(void);

7

Chapter VI
Exercise 03 : ft_print_numbers
Turn-in directory : ex03/
Files to turn in : ft_print_numbers.c
Allowed functions : write

Create a function that displays all digits, on a single line, by ascending
order.
Here’s how it should be prototyped :
void ft_print_numbers(void);

8

Chapter VII
Exercise 04 : ft_is_negative
Turn-in directory : ex04/
Files to turn in : ft_is_negative.c
Allowed functions : write

Create a function that displays ’N’ or ’P’ depending on the integer’s sign
entered as a parameter. If n is negative, display ’N’. If n is positive or
null, display ’P’.
Here’s how it should be prototyped :
void ft_is_negative(int n);

9

Chapter VIII
Exercise 05 : ft_print_comb
Turn-in directory : ex05/
Files to turn in : ft_print_comb.c
Allowed functions : write

Create a function that displays all different combinations of three different
digits in ascending order, listed by ascending order - yes, repetition is
voluntary.
Here’s the intended output :
$>./a.out | cat -e
012, 013, 014, 015, 016, 017, 018, 019, 023, ..., 789$>

987 isn’t there because 789 already is.
999 isn’t there because the digit 9 is present more than once.
Here’s how it should be prototyped :
void ft_print_comb(void);

10

Chapter IX
Exercise 06 : ft_print_comb2
Turn-in directory : ex06/
Files to turn in : ft_print_comb2.c
Allowed functions : write

Create a function that displays all different combination of two digits
between 00 and 99, listed by ascending order.
Here’s the expected output :
$>./a.out | cat -e
00 01, 00 02, 00 03, 00 04, 00 05, ..., 00 99, 01 02, ..., 97 99, 98 99$>

Here’s how it should be prototyped :
void ft_print_comb2(void);

11

Chapter X
Exercise 07 : ft_putnbr
Turn-in directory : ex07/
Files to turn in : ft_putnbr.c
Allowed functions : write

Create a function that displays the number entered as a parameter. The function
has to be able to display all possible values within an int type variable.
Here’s how it should be prototyped :
void ft_putnbr(int nb);

For example:
ft_putnbr(42) displays "42".

12

Chapter XI
Exercise 08 : ft_print_combn
Turn-in directory : ex08/
Files to turn in : ft_print_combn.c
Allowed functions : write

Create a function that displays all different combinations of n numbers by
ascending order.
n will be so that : 0 < n < 10.
If n = 2, here’s the expected output :
$>./a.out | cat -e
01, 02, 03, ..., 09, 12, ..., 79, 89$>

Here’s how it should be prototyped :
void ft_print_combn(int n);

13
